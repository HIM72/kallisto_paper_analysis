ANNO_PRE = 'simdata/hg19-ucsc_transcripts'
ANNO_FA = 'simdata/hg19-ucsc_transcripts.fa.gz'

KAL_IDX = 'index/{0}.kidx'.format( ANNO_PRE )

KALLISTO = '/home/hjp/dev_versions/kallisto_elen'

SIMS = ['bias_and_error', 'error_only']

rule all:
    input:
        'simdata/README',
        expand('results/{sim}/kallisto/abundance.h5', sim = SIMS),
        expand('results/{sim}/kallisto_bias/abundance.h5', sim = SIMS)

rule download_express_sim:
    output:
        'simdata/README',
        'simdata/hg19-ucsc_transcripts.fa.gz',
        'simdata/bias_and_error/sim_1.fa.gz',
        'simdata/bias_and_error/sim_2.fa.gz',
        'simdata/error_only/sim_1.fa.gz',
        'simdata/error_only/sim_2.fa.gz'
    shell:
        'wget '
        '-r '
        '--no-parent '
        '-nd '
        'http://lmcb.math.berkeley.edu/eXpress/simdata/'

rule kal_idx:
    input:
        ANNO_FA
    output:
        KAL_IDX
    threads:
        1
    shell:
        '{KALLISTO} index '
        '-i {KAL_IDX} '
        '{ANNO_FA}'

rule kallisto_bias:
    input:
        'simdata/{sim}/sim_1.fa.gz',
        'simdata/{sim}/sim_2.fa.gz',
        KAL_IDX
    output:
        'results/{sim}/kallisto_bias',
        'results/{sim}/kallisto_bias/abundance.h5'
    benchmark:
        'benchmarks/{sim}/kallisto_bias.json'
    threads:
        1
    shell:
        '{KALLISTO} quant '
        '-i {KAL_IDX} '
        '-o {output[0]} '
        '--bias '
        '{input[0]} {input[1]}'

rule kallisto:
    input:
        'simdata/{sim}/sim_1.fa.gz',
        'simdata/{sim}/sim_2.fa.gz',
        KAL_IDX
    output:
        'results/{sim}/kallisto',
        'results/{sim}/kallisto/abundance.h5'
    benchmark:
        'benchmarks/{sim}/kallisto.json'
    threads:
        1
    shell:
        '{KALLISTO} quant '
        '-i {KAL_IDX} '
        '-o {output[0]} '
        '{input[0]} {input[1]}'
