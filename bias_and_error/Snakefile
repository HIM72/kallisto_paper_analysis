ANNO_PRE = 'simdata/hg19-ucsc_transcripts'
ANNO_FA = 'simdata/hg19-ucsc_transcripts.fa.gz'

KAL_IDX = 'index/{0}.kidx'.format( ANNO_PRE )

KALLISTO = '/home/hjp/dev_versions/kallisto_elen'

SIMS = ['bias_and_error', 'error_only']

rule all:
    input:
        'simdata/README',
        expand('simdata/{sim}/counts.txt', sim = SIMS),
        expand('results/{sim}/kallisto/abundance.h5', sim = SIMS),
        expand('results/{sim}/kallisto_bias/abundance.h5', sim = SIMS),
        'analysis/R/bias_analysis.html'

rule download_express_sim:
    output:
        'simdata/README',
        'simdata/hg19-ucsc_transcripts.fa.gz',
        'simdata/bias_and_error/sim_1.fa.gz',
        'simdata/bias_and_error/sim_2.fa.gz',
        'simdata/error_only/sim_1.fa.gz',
        'simdata/error_only/sim_2.fa.gz'
    shell:
        'wget '
        '-r '
        '--no-parent '
        '-nd '
        'http://lmcb.math.berkeley.edu/eXpress/simdata/'

rule kal_idx:
    input:
        ANNO_FA
    output:
        KAL_IDX
    threads:
        1
    shell:
        '{KALLISTO} index '
        '-i {KAL_IDX} '
        '{ANNO_FA}'

rule kallisto_bias:
    input:
        'simdata/{sim}/sim_1.fa.gz',
        'simdata/{sim}/sim_2.fa.gz',
        KAL_IDX
    output:
        'results/{sim}/kallisto_bias',
        'results/{sim}/kallisto_bias/abundance.h5'
    benchmark:
        'benchmarks/{sim}/kallisto_bias.json'
    threads:
        1
    shell:
        '{KALLISTO} quant '
        '-i {KAL_IDX} '
        '-o {output[0]} '
        '--bias '
        '{input[0]} {input[1]}'

rule kallisto:
    input:
        'simdata/{sim}/sim_1.fa.gz',
        'simdata/{sim}/sim_2.fa.gz',
        KAL_IDX
    output:
        'results/{sim}/kallisto',
        'results/{sim}/kallisto/abundance.h5'
    benchmark:
        'benchmarks/{sim}/kallisto.json'
    threads:
        1
    shell:
        '{KALLISTO} quant '
        '-i {KAL_IDX} '
        '-o {output[0]} '
        '{input[0]} {input[1]}'

#rule get_true_counts:
#    input:
#        'simdata/{sim}/sim_1.fa.gz'
#    output:
#        'simdata/{sim}/counts.txt'
#    shell:
#        'zcat {input} | '
#        'grep \'^>\' | '
#        'tr -d \'>\' | '
#        'awk \'BEGIN {{FS=":"}} {{print $2}}\' | '
#        'sort | '
#        'uniq -c >'
#        '{output}'

rule get_true_counts:
    input:
        'simdata/{sim}/sim_1.fa.gz'
    output:
        'simdata/{sim}/counts.txt'
    threads:
        1
    shell:
        'python analysis/count_reads.py '
        '<(zcat {input}) > '
        '{output}'
    
rule gen_report:
    input:
        expand('simdata/{sim}/counts.txt', sim = SIMS)
    output:
        'analysis/R/bias_analysis.html'
    threads:
        1
    shell:
        '''
        Rscript \
        --default-packages=utils,methods,stats,grDevices,graphics \
        -e 'setwd("analysis/R")' \
        -e 'rmarkdown::render("bias_analysis.Rmd")'
        '''

rule clean:
    shell:
        'rm analysis/R/bias_analysis.html'
